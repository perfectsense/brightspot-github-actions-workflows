name: 'SonarCloud'

on:
  workflow_call:
    inputs:
      gradle-params:
        description: 'Extra parameters to pass to Gradle command'
        required: false
        type: string

      gradle-action-cache-disable:
        description: 'Enable only if not using Gradle Remote Cache'
        required: false
        default: true
        type: boolean

      java-distribution:
        description: 'Java distribution'
        required: false
        default: 'temurin'
        type: string

      java-version:
        description: 'Java version'
        required: false
        default: '11'
        type: string

      node-version:
        description: 'Node version'
        required: false
        default: '16.11.0'
        type: string

      cache-npm:
        description: 'Cache NPM'
        default: true
        type: boolean

      runs-on:
        description: Platform to execute on
        type: string
        default: ubuntu-20.04-4core

      sonar-cloud-enabled:
        description: 'Enable SonarCloud Code Analysis'
        default: true
        type: boolean

      env1Name:
        description: Name for environment variable #1 (value is passed via secrets)
        type: string
      env2Name:
        description: Name for environment variable #2 (value is passed via secrets)
        type: string
      env3Name:
        description: Name for environment variable #3 (value is passed via secrets)
        type: string

    secrets:
      ENV_1_VALUE:
        required: false
      ENV_2_VALUE:
        required: false
      ENV_3_VALUE:
        required: false
      GRADLE_CACHE_USERNAME:
        required: false
      GRADLE_CACHE_PASSWORD:
        required: false
jobs:
  sonar-cloud:
    name: "Sonar Cloud"
    env: 
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      STYLEGUIDE_BUILD_OPTS: -s
    runs-on: ${{ inputs.runs-on }}
    steps:
      - name: Set Environment Variables
        run: |
          if [ -n "${{ inputs.env1Name }}" ]; then
            echo "${{ inputs.env1Name }}=${{ secrets.ENV_1_VALUE }}" >> $GITHUB_ENV
          fi
          if [ -n "${{ inputs.env2Name }}" ]; then
            echo "${{ inputs.env2Name }}=${{ secrets.ENV_2_VALUE }}" >> $GITHUB_ENV
          fi
          if [ -n "${{ inputs.env3Name }}" ]; then
            echo "${{ inputs.env3Name }}=${{ secrets.ENV_3_VALUE }}" >> $GITHUB_ENV
          fi
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
            node-version: ${{ inputs.node-version }}
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ inputs.java-version }}
          distribution: ${{ inputs.java-distribution }}

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Build
        if: ${{ inputs.sonar-cloud-enabled && env.SONAR_TOKEN != '' && github.actor != 'dependabot[bot]' }}
        run: ./gradlew -x test --scan

      - name: SonarCloud Code Version
        if: ${{ inputs.sonar-cloud-enabled && env.SONAR_TOKEN != '' && startsWith(github.ref, 'refs/tags/v') && github.actor != 'dependabot[bot]' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          JAVA_HOME=$JAVA_HOME_17_X64 
          version=$(git describe --tags --match "v[0-9]*" --abbrev=0 HEAD || echo "0")
          version=${version/v/}
          echo "Creating a new analysis for version ${version}"
          ./gradlew -x test sonar -i -Dsonar.projectVersion="${version}"

      - name: SonarCloud Code Analysis
        if: ${{ inputs.sonar-cloud-enabled && env.SONAR_TOKEN != '' && startsWith(github.ref, 'refs/tags/v') != true && github.actor != 'dependabot[bot]' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          JAVA_HOME=$JAVA_HOME_17_X64 
          ./gradlew -x test sonar --info

