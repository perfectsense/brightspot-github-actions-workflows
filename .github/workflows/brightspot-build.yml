name: 'Brightspot Build'

on:
  workflow_call:
    inputs:
      build-maven:
        description: 'Build with Maven'
        default: false
        type: boolean

      build-gradle:
        description: 'Build with Gradle'
        default: true
        type: boolean

      gradle-params:
        description: 'Extra parameters to pass to Gradle command'
        required: false
        type: string

      java-distribution:
        description: 'Java distribution'
        required: false
        default: 'adopt'
        type: string

      java-version:
        description: 'Java version'
        required: false
        default: '11'
        type: string

      node-version:
        description: 'Node version'
        required: false
        default: '16.11.0'
        type: string

      cache-npm:
        description: 'Cache NPM'
        default: true
        type: boolean

      war-build-dir:
        description: 'Directory containing the compiled WAR file. This overrides the default which is web/build/libs'
        required: false
        default: 'web/build/libs'
        type: string

    secrets:
      GRADLE_CACHE_USERNAME:
        required: false
      GRADLE_CACHE_PASSWORD:
        required: false

jobs:
  build:
    name: "Build"
    runs-on: ubuntu-latest
    # Map the job outputs to step outputs
    outputs:
      container-build-tag: ${{ steps.build-container.outputs.container-build-tag }}
      container-version-tag: ${{ steps.build-container.outputs.container-version-tag }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
            node-version: ${{ inputs.node-version }}

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ inputs.java-version }}
          distribution: ${{ inputs.java-distribution }}

      - name: Setup Gradle
        if: ${{ inputs.build-gradle }}
        uses: gradle/gradle-build-action@v2

      - name: Get Tag Version
        shell: bash
        run: |
          echo "GITHUB_ACTIONS_TAG=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
          echo "GITHUB_ACTIONS_PULL_REQUEST=${{ github.event.pull_request.number }}" >> $GITHUB_ENV

      - uses: actions/checkout@v3
        with:
          repository: perfectsense/brightspot-github-actions-workflows
          ref: v1
          path: ./brightspot

      - name: Maven Cache
        if: ${{ inputs.build-maven }}
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Gradle Cache
        if: ${{ inputs.build-gradle }}
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: NPM Cache
        if: ${{ inputs.cache-npm}}
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            ~/.yarn/cache
            ~/.config/yarn/global
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Build with Maven
        if: ${{ inputs.build-maven }}
        shell: bash
        run: ./brightspot/brightspot/build-maven.sh

      - name: Build with Gradle
        if: ${{ inputs.build-gradle }}
        shell: bash
        env:
          GRADLE_CACHE_USERNAME: ${{ secrets.GRADLE_CACHE_USERNAME }}
          GRADLE_CACHE_PASSWORD: ${{ secrets.GRADLE_CACHE_PASSWORD }}
          GRADLE_PARAMS: ${{ inputs.gradle-params }}
        run: ./brightspot/brightspot/build-gradle.sh

      - name: Publish JUnit test reports
        uses: mikepenz/action-junit-report@v2
        if: ${{ inputs.build-gradle }} && ( success() || failure() )
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'

      - name: Store Build
        if: ${{ inputs.build-gradle || inputs.build-maven }}
        uses: actions/upload-artifact@v3
        with:
            name: brightspot-build
            path: ${{ inputs.war-build-dir }}


